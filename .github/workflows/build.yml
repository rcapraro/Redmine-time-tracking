name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          cache-read-only: false
          cache-overwrite-existing: true

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Package application (Windows MSI)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: ./gradlew packageReleaseMsi

      - name: Package application (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: ./gradlew packageReleaseDmg

      - name: Upload Windows MSI artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: redmime-time-windows-installer
          path: build/compose/binaries/main-release/msi/*.msi

      - name: Upload macOS dmg
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: redmime-time-macos
          path: build/compose/binaries/main-release/dmg/*.dmg
